name: Testing

defaults:
  run:
    shell: bash

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - '**'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      should_skip_ghcide: ${{ steps.skip_ghcide_check.outputs.should_skip }}
      ghcs: ${{ steps.matrix-inputs.outputs.ghcs }}
      packages: ${{ steps.matrix-inputs.outputs.packages }}
      exclusions: ${{ steps.matrix-inputs.outputs.exclusions }}

    steps:
      # Need the repo checked out in order to read the files
      - uses: actions/checkout@v3

      - id: matrix-inputs
        run: |
          echo "ghcs=$(cat ./.github/workflows/supported-ghc-versions.json)" >> $GITHUB_OUTPUT
          echo "packages=$(cat ./.github/workflows/packages.json | jq -c '[.[] | .package]')" >> $GITHUB_OUTPUT
          echo "exclusions=$(cat ./.github/workflows/packages.json | jq -c '[.[] | .package as $package | (.excluded_ghcs[] | {package: $package, ghc: .})]')" >> $GITHUB_OUTPUT

      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          cancel_others: false
          paths_ignore: '[ "**/docs/**"
                         , "**.md"
                         , "**/LICENSE"
                         , "**.nix"
                         , "flake.lock"
                         , "**/README.md"
                         , "FUNDING.yml"
                         , ".circleci/**"
                         , "**/stack*.yaml"
                         , ".gitlab-ci.yaml"
                         , ".gitlab/**"
                         ]'
      # If we only change ghcide downstream packages we have not test ghcide itself
      - id: skip_ghcide_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          cancel_others: false
          paths_ignore: '[ "hls-test-utils/**"
                         , "plugins/**"
                         , "src/**"
                         , "exe/**"
                         , "test/**"
                         , "shake-bench/**"
                         ]'

  test:
    if: needs.pre_job.outputs.should_skip != 'true'
    needs:
      - pre_job
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      # when you edit this list of GHC versions,
      # **don't forget**
      # to update the ghc versions in 'caching.yml'.
      matrix:
        ghc: ${{ fromJSON(needs.pre_job.outputs.ghcs) }}
        package: ${{ fromJSON(needs.pre_job.outputs.packages) }}
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        # Mark which GHC versions on which platforms we want to test.
        include:
           # Test all supported versions, but only on ubuntu and windows
           - os: ubuntu-latest
             test: true
           - os: windows-latest
             test: true
        #exclude: ${{ fromJSON(needs.pre_job.outputs.exclusions) }}

    steps:
      - uses: actions/checkout@v3

      - run: |
          echo "${{ needs.pre_job.outputs.ghcs }}"
          echo "${{ needs.pre_job.outputs.packages }}"
          echo "${{ needs.pre_job.outputs.exclusions }}"

      - uses: ./.github/actions/setup-build
        with:
          ghc: ${{ matrix.ghc }}
          os:  ${{ runner.os }}

      - name: Set test options
        # run the tests without parallelism, otherwise tasty will attempt to run
        # all functional test cases simultaneously which causes way too many hls
        # instances to be spun up for the poor github actions runner to handle
        run: |
          echo "TEST_OPTS=-j1 --rerun-update --rerun-filter failures,exceptions" >> $GITHUB_ENV

      - name: Cache test log between attempts of the same run
        uses: actions/cache@v3
        env:
          cache-name: cache-test-log
        with:
          path: "**/.tasty-rerun-log*"
          key: v1-${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.package}}-test-log-${{ github.sha }}

      - name: Build ${{ matrix.package }}
        run: cabal build ${{ matrix.package }}

      - if: matrix.test
        name: Test ${{ matrix.package }}
        # For the func and wrapper tests
        env:
          HLS_TEST_EXE: hls
          HLS_WRAPPER_TEST_EXE: hls-wrapper
        run: cabal test ${{ matrix.package }} --test-options="$TEST_OPTS"

  test_post_job:
    if: always()
    runs-on: ubuntu-latest
    needs: [pre_job, test]
    steps:
      - run: |
          echo "jobs info: ${{ toJSON(needs) }}"
      - if: contains(needs.*.result, 'failure')
        run: exit 1
      - if: contains(needs.*.result, 'cancelled') && needs.pre_job.outputs.should_skip != 'true'
        run: exit 1
